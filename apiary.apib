FORMAT: 1A
HOST: http://core.app/api

#BROSA CORE API

The APIs listed in this documentation are for reference purposes. The intent is to provide BROSA products related data as requested in API requests listed in hierarchy

# Group Collection

Collections are the top most parent in the entity hierarchy

## '/collections' [/collections{?sort,include,page}]

### GET [GET]

Paginated lists of all BROSA product collections 

+ Parameters
    + sort (optional) - To get the results sorted. Values could be id/name or -id/-name for ascending or decending order
    + include (optional) - To specify the entities included. Values could be products
    + page (optional) - To specify the pagenumber required

+ Response 200 (application/json)
    
        {
          "data": [
            {
              "id": 360,
              "name": "Otto",
              "has_products": true,
              "link": "http://brosa-api.dev/api/collections/360?include=products"
            },
            {
              "id": 359,
              "name": "Kendall",
              "has_products": true,
              "link": "http://brosa-api.dev/api/collections/359?include=products"
            },
            {
              "id": 358,
              "name": "Mim",
              "has_products": true,
              "link": "http://brosa-api.dev/api/collections/358?include=products"
            },
            {
              "id": 357,
              "name": "Pia",
              "has_products": true,
              "link": "http://brosa-api.dev/api/collections/357?include=products"
            },
            {
              "id": 356,
              "name": "Clem",
              "has_products": true,
              "link": "http://brosa-api.dev/api/collections/356?include=products"
            },
            {
              "id": 354,
              "name": "Sondra",
              "has_products": true,
              "link": "http://brosa-api.dev/api/collections/354?include=products"
            },
            {
              "id": 353,
              "name": "Milo",
              "has_products": true,
              "link": "http://brosa-api.dev/api/collections/353?include=products"
            },
            {
              "id": 352,
              "name": "Litchfield",
              "has_products": true,
              "link": "http://brosa-api.dev/api/collections/352?include=products"
            },
            {
              "id": 351,
              "name": "Jervis",
              "has_products": true,
              "link": "http://brosa-api.dev/api/collections/351?include=products"
            },
            {
              "id": 349,
              "name": "Spacecraft",
              "has_products": true,
              "link": "http://brosa-api.dev/api/collections/349?include=products"
            },
            {
              "id": 348,
              "name": "Thomas",
              "has_products": true,
              "link": "http://brosa-api.dev/api/collections/348?include=products"
            },
            {
              "id": 347,
              "name": "Conrad",
              "has_products": true,
              "link": "http://brosa-api.dev/api/collections/347?include=products"
            },
            {
              "id": 346,
              "name": "Alana",
              "has_products": true,
              "link": "http://brosa-api.dev/api/collections/346?include=products"
            },
            {
              "id": 345,
              "name": "Carroll",
              "has_products": true,
              "link": "http://brosa-api.dev/api/collections/345?include=products"
            },
            {
              "id": 344,
              "name": "Milly",
              "has_products": true,
              "link": "http://brosa-api.dev/api/collections/344?include=products"
            },
            {
              "id": 343,
              "name": "Ballard",
              "has_products": true,
              "link": "http://brosa-api.dev/api/collections/343?include=products"
            },
            {
              "id": 342,
              "name": "Potter",
              "has_products": true,
              "link": "http://brosa-api.dev/api/collections/342?include=products"
            },
            {
              "id": 341,
              "name": "Martin",
              "has_products": true,
              "link": "http://brosa-api.dev/api/collections/341?include=products"
            },
            {
              "id": 340,
              "name": "Holmes",
              "has_products": true,
              "link": "http://brosa-api.dev/api/collections/340?include=products"
            },
            {
              "id": 339,
              "name": "McEwan",
              "has_products": true,
              "link": "http://brosa-api.dev/api/collections/339?include=products"
            },
            {
              "id": 338,
              "name": "Tenerife",
              "has_products": true,
              "link": "http://brosa-api.dev/api/collections/338?include=products"
            },
            {
              "id": 337,
              "name": "Cadiz",
              "has_products": true,
              "link": "http://brosa-api.dev/api/collections/337?include=products"
            },
            {
              "id": 336,
              "name": "Lanzarote",
              "has_products": true,
              "link": "http://brosa-api.dev/api/collections/336?include=products"
            },
            {
              "id": 335,
              "name": "Alicante",
              "has_products": true,
              "link": "http://brosa-api.dev/api/collections/335?include=products"
            },
            {
              "id": 334,
              "name": "Muro",
              "has_products": true,
              "link": "http://brosa-api.dev/api/collections/334?include=products"
            }
          ],
          "count": 25,
          "pages": 14,
          "current_page": 1
        }

### POST [POST]

Create new BROSA product collection

+ Attributes
    + name (required, string) - Name of the BROSA product collection
    
+ Response 200 (application/json)
    
        {"data":[{"id":361,"name":"Test Controller 2","has_products":false,"link":"http:\/\/brosa-api.dev\/api\/collections\/361?include=products"}]}

## '/collections/{id}'   [/collections/{id}{?sort,include,page}]

### GET [GET]

Details of a specific BROSA product collection.  

+ Parameters
    + id - To indicate the specific BROSA product collection
    + include (optional) - To specify the entities included. Values could be products
    

+ Response 200 (application/json)
    
        {
          "data": [
            {
              "id": 167,
              "name": "Bruce",
              "has_products": true,
              "link": "http://brosa-api.dev/api/collections/167?include=products"
            }
          ]
        }
        
### POST [POST]

Update existing BROSA product collection

+ Parameters
    + id - To indicate the specific BROSA product collection

+ Attributes
    + name (required, string) - Name of the BROSA product collection

+ Response 200 (application/json)
    
        {"data":[{"id":100,"name":"Test Controller 2","has_products":true,"link":"http:\/\/brosa-api.dev\/api\/collections\/100?include=products"}]}        

## '/collections/{id}/delete' [/collections/{id}/delete]

### POST [POST]

Delete existing BROSA product collection

+ Parameters
    + id - To indicate the specific BROSA product collection

+ Response 200 (application/json)
    
        {"data":{"status":"200","title":"Item Deleted","detail":"The resource item is deleted"}}

# Group Product

Each Product belongs to/is a child of a Collection and has many Variants

## '/products' [/products]

### GET [GET]

Paginated lists of all BROSA product 

+ Response 200 (application/json)
    
        {"products":"name"}

### POST [POST]

Create new BROSA product 

+ Response 200 (application/json)
    
        {"products":"name"}

## '/products/{id}'   [/products/{id}]

### GET [GET]

Details of a specific BROSA product .  

+ Response 200 (application/json)
    
        {"products":"name"}
        
### POST [POST]

Update existing BROSA product 

+ Response 200 (application/json)
    
        {"products":"name"}        

## '/products/{id}/delete' [/products/{id}/delete]

### POST [POST]

Delete existing BROSA product 

+ Response 200 (application/json)
    
        {"products":"name"}
        
# Group Variant

Each Variant belongs to/is a child of a Product and has many Attributes

## '/variants' [/variants]

### GET [GET]

Paginated lists of all BROSA product variants

+ Response 200 (application/json)
    
        {"variants":"name"}

### POST [POST]

Create new BROSA product variants

+ Response 200 (application/json)
    
        {"variants":"name"}

## '/variants/{id}'   [/variants/{id}]

### GET [GET]

Details of a specific BROSA product variants  

+ Response 200 (application/json)
    
        {"variants":"name"}
        
### POST [POST]

Update existing BROSA product variants

+ Response 200 (application/json)
    
        {"variants":"name"}        

## '/variants/{id}/delete' [/variants/{id}/delete]

### POST [POST]

Delete existing BROSA product variants

+ Response 200 (application/json)
    
        {"variants":"name"}

# Group Attributes

## '/attributes' [/attributes]

### GET [GET]

Paginated lists of all BROSA product/variant attributes

+ Response 200 (application/json)
    
        {"attributes":"name"}

### POST [POST]

Create new BROSA product/variant attributes

+ Response 200 (application/json)
    
        {"attributes":"name"}

## '/attributes/{id}'   [/attributes/{id}]

### GET [GET]

Details of a specific BROSA product/variant attributes  

+ Response 200 (application/json)
    
        {"attributes":"name"}
        
### POST [POST]

Update existing BROSA product/variant attributes

+ Response 200 (application/json)
    
        {"attributes":"name"}        

## '/attributes/{id}/delete' [/attributes/{id}/delete]

### POST [POST]

Delete existing BROSA product/variants attributes

+ Response 200 (application/json)
    
        {"attributes":"name"}